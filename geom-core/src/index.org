#+SETUPFILE: ../../src/setup.org
#+TITLE: thi.ng/geom-core

* About the project

** Overview

This module defines all core protocols, vector & matrix types and
common lowlevel functions used throughout the entire library (and
the other library modules).

*** Geometric entities

| *2D*           | *3D*                      |
|----------------+---------------------------|
| Vec2           | Vec3                      |
| Matrix32       | Matrix44                  |
|                | Quaternion                |

** Status

ALPHA quality, in active development.

* Namespaces

- [[./core.org][thi.ng.geom.core]]
- [[./intersect.org][thi.ng.geom.core.intersect]]
- [[./matrix.org][thi.ng.geom.core.matrix]]
- [[./quaternion.org][thi.ng.geom.core.quaternion]]
- [[./subdiv.org][thi.ng.geom.core.subdiv]]
- [[./utils.org][thi.ng.geom.core.utils]]
- [[./vector.org][thi.ng.geom.core.vector]]

* Tests

- [[../test/core.org][thi.ng.geom.core.test.core]]

* Benchmarks

Benchmarks are in the process of being worked and use [[https://github.com/davidsantiago/perforate][lein-perforate]]
(Criterium) and the npm [[https://www.npmjs.com/package/benchmark][benchmark]] package (for CLJS). Results are
available in this spreadsheet:

[[https://docs.google.com/spreadsheets/d/15VBRlZMa0iY2HZEPQ0pFevp3Pzlfi0f2z944LsJD6O8/edit?usp%3Dsharing][Benchmark results]]

* Module definition

** Building & testing this project

Please see the [[file:../../src/index.org][parent project]] for further information.

** Injected properties                                             :noexport:

This template uses shared project configuration defined in [[../../src/config.org][config.org]].
Module specific settings are defined below:

#+BEGIN_SRC clojure :noweb-ref project-name
thi.ng/geom-core
#+END_SRC

#+BEGIN_SRC clojure :noweb yes :noweb-ref cljs-artefact-path
target/geom-core-<<conf-version()>>.js
#+END_SRC

** Leiningen project file                                          :noexport:

#+BEGIN_SRC clojure :tangle ../babel/project.clj :noweb yes :mkdirp yes :padline no
  (defproject <<project-name>> "<<conf-version()>>"
    :description  "thi.ng geometry kit - core module"
    :url          "<<conf-project-url>>"
    :license      {:name "Apache Software License"
                   :url  "http://www.apache.org/licenses/LICENSE-2.0"
                   :distribution :repo}
    :scm          {:name "git"
                   :url  "<<conf-project-url>>"}

    :min-lein-version "2.4.0"

    :dependencies [<<dep-clj>>
                   <<dep-cljs>>
                   <<dep-xerror>>
                   <<dep-math>>
                   <<dep-dstruct>>]

    :perforate {:environments [{:namespaces [thi.ng.geom.bench.core.vector]}]}

    :profiles     {:dev {:dependencies [<<dep-perforate-x>>]
                         :plugins      [<<dep-cljsbuild>>
                                        <<dep-cljs-test>>
                                        <<dep-perforate>>
                                        <<dep-lein-npm>>]
                         :node-dependencies [<<dep-npm-benchmark>>]
                         :global-vars {*warn-on-reflection* true}
                         :jvm-opts ^:replace []
                         :aliases {"cleantest" ["do" "clean," "test," "cljsbuild" "test"]}}}

    :cljsbuild    {:builds [{:id "simple"
                             :source-paths ["src" "test"]
                             :compiler {:output-to "<<cljs-artefact-path>>"
                                        :optimizations :whitespace
                                        :pretty-print true}}
                            {:id "bench"
                             :source-paths ["src" "test" "benchmarks"]
                             :notify-command ["node" "target/cljs/benchmark.js"]
                             :compiler {:target :nodejs
                                        :output-to "target/cljs/benchmark.js"
                                        :optimizations :simple
                                        :pretty-print true}}]
                   :test-commands {"unit-tests" ["phantomjs" :runner "<<cljs-artefact-path>>"]}}

    :pom-addition [:developers [:developer
                                [:name "Karsten Schmidt"]
                                [:url "http://postspectacular.com"]
                                [:timezone "0"]]])
#+END_SRC

** ClojureScript HTML harness                                      :noexport:

#+BEGIN_SRC html :tangle ../babel/index.html :noweb yes :mkdirp yes :padline no
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <title><<lein-coords>> test</title>
    </head>
    <body>
      <script type="text/javascript" src="<<cljs-artefact-path>>"></script>
    </body>
  </html>
#+END_SRC

** Accessing library version during runtime

The autogenerated namespace =thi.ng.geom.core.version= contains a single
symbol =version= holding the version string defined above:

#+BEGIN_SRC clojure :noweb yes
  (use 'thi.ng.geom.core.version)
  
  (prn version)
  ; "<<conf-version()>>"
#+END_SRC

*** Version namespace                                              :noexport:

#+BEGIN_SRC clojure :tangle ../babel/src/thi/ng/geom/core/version.cljc :noweb yes :mkdirp yes :padline no
  (ns thi.ng.geom.core.version)
  (def version "<<conf-version()>>")
#+END_SRC

** Contributors

| *Name*          | *Role*                          | *Website*           |
| [[mailto:k@thi.ng][Karsten Schmidt]] | initiator & principal developer | [[http://postspectacular.com][postspectacular.com]] |
|                 |                                 | [[http://thi.ng][thi.ng]]              |
